package  {	import flash.display.MovieClip;	import flash.events.*;	import flash.text.*;		public class Inventory extends MovieClip{				var _root:MovieClip;				private var displayedItemList:Array = new Array();		private var textBoxList:Array = new Array();		private var quantityList:Array = new Array();				private var pointer:InvPointer = new InvPointer();		private var pointerIndex:int = 0;				private var format:TextFormat = new TextFormat();				public function Inventory(iL:Array) {			displayedItemList = iL;						format.size = 20			format.font = "_sans";						setUpTextBoxes();			setUpPointer();						this.addEventListener(Event.ADDED, startClass);			this.addEventListener(Event.REMOVED, endClass);		}				//Connects to main program		public function startClass(event:Event){			_root = MovieClip(root);						this.addEventListener(Event.ENTER_FRAME, updateInv);		}				public function endClass(event:Event){						resetPointer();						this.removeEventListener(Event.ENTER_FRAME, updateInv);		}				public function setUpTextBoxes():void{			for(var i:int = 0; i < 10; i++){				//Add item name text box				textBoxList[i] = new TextField();								textBoxList[i].setTextFormat(format);				textBoxList[i].x = 50;				textBoxList[i].y = 30 + 1.5 * (int)(format.size) * i;				textBoxList[i].width = 300;								this.addChild(textBoxList[i]);								//Add quantity text box				quantityList[i] = new TextField();								quantityList[i].setTextFormat(format);				quantityList[i].x = 300;				quantityList[i].y = 30 + 1.5 * (int)(format.size) * i;								this.addChild(quantityList[i]);			}		}				public function setUpPointer():void{			pointer.x = 10;			pointer.y = 30;						addChild(pointer);		}				//Updates the text box in inventory		public function updateInv(event:Event):void{			//Update text fields			for(var i:int = 0; i < 10; i++){								if(i < displayedItemList.length){					//Update name					textBoxList[i].text = displayedItemList[i].getName();					textBoxList[i].setTextFormat(format);										//Update quantity					quantityList[i].text = "x" + displayedItemList[i].getNum();					quantityList[i].setTextFormat(format);				}				else{					//Update name					textBoxList[i].text = "----------"					textBoxList[i].setTextFormat(format);										//Update quantity					quantityList[i].text = "";					quantityList[i].setTextFormat(format);				}			}															//Update pointer			if(!_root.isSelectUp){				if(_root.upDown && _root.pointerCoolDown == 0 && pointerIndex > 0 && !_root.isPlayingText){					_root.pointerCoolDown = 5;										pointerIndex--;					pointer.y = textBoxList[pointerIndex].y;				}				else if(_root.downDown && _root.pointerCoolDown == 0 && pointerIndex < 9 && !_root.isPlayingText){					_root.pointerCoolDown = 5;										pointerIndex++;					pointer.y = textBoxList[pointerIndex].y;				}			}					}				//Reset pointer		public function resetPointer():void{			pointer.x = 10;			pointer.y = 30;			pointerIndex = 0;		}				//Gets pointer index		public function getPointerIndex():int{			return pointerIndex;		}				//Gets current item		public function getCurrentItem():Item{			if(pointerIndex < displayedItemList.length){				return displayedItemList[pointerIndex];			}			else{				return null;			}		}				//Returns current item name		public function getCurrentItemName():String{			if(pointerIndex < displayedItemList.length){				return displayedItemList[pointerIndex].getName();			}			else{				return ""			}		}	}	}